---
- name: TOWER-AS3-BIG-IQ - OFFBOARD AND DELETE BIG-IP from BIG-IQ
  hosts: bigiq
  connection: local
  gather_facts: false
  vars:
    GCE_PROJECT: "{{ lookup('env', 'GCE_PROJECT') }}"
    GCE_CREDENTIALS_FILE_PATH: "{{ lookup('env', 'GCE_CREDENTIALS_FILE_PATH') }}"
    GCE_EMAIL: "{{ lookup('env', 'GCE_EMAIL') }}"

  tasks:

    # First download galaxy roles for F5 ATC
    - name: Install roles from Ansible Galaxy
      command: ansible-galaxy install f5devcentral.atc_deploy -p ./roles/ 

    - name: show downloaded roles
      command: ls ./roles/

    # Get the IP address of the Previously created BIG-IP instance
    - name: get IP Address of BIG-IP instance
      gcp_compute_instance_facts:
        zone: "{{ gcp_zone }}"
        filters:
        - name = "{{ resource_prefix }}-bigip-instance"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"
      register: bigip_facts

    - set_fact:
        bigip_mgmt:  "{{ bigip_facts['items'][0]['networkInterfaces'][0]['accessConfigs'][0]['natIP'] }}"

    ############################################
    # Below tasks are for offboarding a BIG-IP #
    ############################################
    - set_fact:
        mgmt: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}:{{ hostvars[inventory_hostname]['mgmt_port'] }}"

    # provider var for atc_deploy role, using BIG-IQ
    - name: Set connection provider for BIG-IQ tasks
      set_fact:
        provider_atc: 
          server: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}"
          server_port: 443
          user: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          validate_certs: false

    - name: prepare the DO declarations
      template: 
        src: "templates/revoke_bigip_do.j2"
        dest: "files/revoke_bigip_do.json"
      delegate_to: localhost

    # Get authentication token for uri module tasks below
    - name: Authenticate to BIG-IQ
      uri:
        url: "https://{{ mgmt }}/mgmt/shared/authn/login"
        method: POST
        headers:
          Content-Type: application/json
        body:
          username: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          loginProviderName: local
        body_format: json
        timeout: 60
        status_code: 200, 202
        validate_certs: false
      register: auth

    # Completely removes BIG-IP from BIG-IQ
    - name: Remove discovered device and its config
      bigiq_device_discovery:
        device_address: "{{ bigip_mgmt }}"
        state: absent
        provider:
          user: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          server: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}"
          validate_certs: no
      delegate_to: localhost

    ################################################
    # Below tasks are for deleting a BIG-IP in GCP #
    ################################################
    
    # Delete instance
    - name: create an instance
      gcp_compute_instance:
          state: absent
          name: '{{ resource_prefix }}-bigip-instance'
          machine_type: n1-standard-4
          disks:
            - auto_delete: true
              boot: true
              source: "{{ disk }}"
          network_interfaces:
              - network: "{{ gce_network }}"
                access_configs:
                  - name: 'External NAT'
                    nat_ip: "{{ address }}"
                    type: 'ONE_TO_ONE_NAT'
          zone: "{{ gcp_zone }}"
          project: "{{ GCE_PROJECT }}"
          auth_kind: serviceaccount
          service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"
          scopes:
            - https://www.googleapis.com/auth/compute
          metadata:
            enable-oslogin: "FALSE"
            startup-script: "{{ lookup('template', 'templates/f5_onboard.j2') }}"
          tags:
            items:
              - bigiq-lab
      register: instance

    - name: Delete address
      gcp_compute_address:
        name: '{{ resource_prefix }}-address-instance'
        region: "{{ gcp_region }}"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: absent
      register: address

    - name: Delete network
      gcp_compute_network:
        name: "{{ resource_prefix }}-network"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file:  "{{ GCE_CREDENTIALS_FILE_PATH }}"
        auto_create_subnetworks: true
        routing_config:
          routing_mode: REGIONAL
        state: absent
      register: gce_network


