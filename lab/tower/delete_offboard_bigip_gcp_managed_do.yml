---
- name: TOWER-AS3-BIG-IQ - OFFBOARD AND DELETE BIG-IP from BIG-IQ
  hosts: bigiq
  connection: local
  gather_facts: false
  vars:
    GCE_PROJECT: "{{ lookup('env', 'GCE_PROJECT') }}"
    GCE_CREDENTIALS_FILE_PATH: "{{ lookup('env', 'GCE_CREDENTIALS_FILE_PATH') }}"
    GCE_EMAIL: "{{ lookup('env', 'GCE_EMAIL') }}"
    # Below vars for galaxy role testing
    atc_service: Device
    atc_method: POST
    atc_delay: 15
    atc_retries: 40
    atc_timeout: 120

  tasks:

    # First download galaxy roles for F5 ATC
    - name: Install roles from Ansible Galaxy
      command: ansible-galaxy install f5devcentral.atc_deploy -p ./roles/ 

    - name: show downloaded roles
      command: ls ./roles/

    # Get the IP address of the Previously created BIG-IP instance
    - name: get IP Address of BIG-IP instance
      gcp_compute_instance_facts:
        zone: "{{ gcp_zone }}"
        filters:
        - name = "{{ resource_prefix }}-bigip-instance"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"
      register: bigip_facts

    - set_fact:
        bigip_mgmt:  "{{ bigip_facts['items'][0]['networkInterfaces'][0]['accessConfigs'][0]['natIP'] }}"

    ############################################
    # Below tasks are for offboarding a BIG-IP #
    ############################################
    - set_fact:
        mgmt: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}:{{ hostvars[inventory_hostname]['mgmt_port'] }}"

    # provider var for atc_deploy role, using BIG-IQ
    - name: Set connection provider for BIG-IQ tasks
      set_fact:
        provider_atc: 
          server: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}"
          server_port: 443
          user: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          validate_certs: false

    - name: prepare the DO declarations
      template: 
        src: "templates/revoke_bigip_do.j2"
        dest: "files/revoke_bigip_do.json"
      delegate_to: localhost
    
    # Using the tasks from the galaxy role to test
    - name: Setup provider and varables
      set_fact:
        provider: "{{ provider_atc }}"
        atc_declaration_file: "files/revoke_bigip_do.json"

    - name: Set Automated Tool Chain service type from file
      set_fact:
        atc_service: "{{ (lookup('file', atc_declaration_file, errors='strict')| from_json).get('class') }}"
      when: atc_declaration_file is defined and atc_service is undefined

    - name: Set Automated Tool Chain metadata
      set_fact:
        toolchain_metadata: "{{ lookup('file', 'files/toolchain_metadata.json', errors='strict') }}"

    - name: Setup service "{{ atc_service }}" endpoints
      set_fact:
        atc_url: "{{ toolchain_metadata['components'][atc_service]['endpoints']['configure']['uri'] }}"
        atc_check_url: "{{ toolchain_metadata['components'][atc_service]['endpoints']['info']['uri'] }}"
    
    - name: include authentication.yaml
      include_tasks: tasks/authentication.yaml

    - name: Verify "{{ atc_service }}" service is available, and collect service info
      uri:
        url: "https://{{ provider.server }}:{{ provider.server_port }}{{ atc_check_url }}"
        timeout: "{{ atc_timeout }}"
        validate_certs: "{{ provider.validate_certs }}"
        headers:
          X-F5-Auth-Token: "{{ f5_auth_token }}"
      register: atc_response
      until:
        - atc_response is success
        - atc_response.json is defined
      retries: "{{ atc_retries }}"
      delay: "{{ atc_delay }}"

    - name: include declare.yaml
      include_tasks: tasks/declare.yaml

    - name: Handle BIG-IQ token timeouts during BIG-IP onboarding
      block:
        - name: include atc_task_check.yaml
          include_tasks: tasks/atc_task_check.yaml
          when:
            - atc_service == "AS3" or atc_service == "Device"
      rescue:
        - debug:
            msg: "caught error: {{ atc_DO_status.json.message }}"
        - name: Re authenticate to BIG-IQ
          include_tasks: tasks/authentication.yaml
          when: atc_DO_status.json.message == "Invalid registered claims."
        - name: Redo atc_task_check.yaml
          include_tasks: tasks/atc_task_check.yaml
          when:
            - atc_service == "AS3" or atc_service == "Device"


    ########################################################
    # Below tasks are for removing the BIG-IP from  BIG-IQ #
    ########################################################

    # Get authentication token for uri module tasks below
    - name: Authenticate to BIG-IQ
      uri:
        url: "https://{{ mgmt }}/mgmt/shared/authn/login"
        method: POST
        headers:
          Content-Type: application/json
        body:
          username: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          loginProviderName: local
        body_format: json
        timeout: 60
        status_code: 200, 202
        validate_certs: false
      register: auth

    # Completely removes BIG-IP from BIG-IQ
    - name: Remove discovered device and its config
      bigiq_device_discovery:
        device_address: "{{ bigip_mgmt }}"
        state: absent
        provider:
          user: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          server: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}"
          validate_certs: no
      delegate_to: localhost

    ################################################
    # Below tasks are for deleting a BIG-IP in GCP #
    ################################################
    
    # Delete instance
    - name: Delete an instance
      gcp_compute_instance:
          state: absent
          name: '{{ resource_prefix }}-bigip-instance'
          zone: "{{ gcp_zone }}"
          project: "{{ GCE_PROJECT }}"
          auth_kind: serviceaccount
          service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"

    - name: Delete address
      gcp_compute_address:
        name: '{{ resource_prefix }}-address-instance'
        region: "{{ gcp_region }}"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"
        state: absent

    - name: Delete firewall
      gcp_compute_firewall:
        name: "{{ resource_prefix }}-network-fw"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file: "{{ GCE_CREDENTIALS_FILE_PATH }}"
        state: absent

    - name: Delete network
      gcp_compute_network:
        name: "{{ resource_prefix }}-network"
        project: "{{ GCE_PROJECT }}"
        auth_kind: serviceaccount
        service_account_file:  "{{ GCE_CREDENTIALS_FILE_PATH }}"
        state: absent


